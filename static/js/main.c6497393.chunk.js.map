{"version":3,"sources":["App.tsx","index.jsx"],"names":["App","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","hasFirstName","setHasFirstName","hasLastName","setHasLastName","hasEmail","setHasEmail","handleReset","className","onSubmit","event","preventDefault","onReset","htmlFor","classNames","id","type","placeholder","value","onChange","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAIaA,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAsCR,oBAAS,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAgCV,oBAAS,GAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KAiBMC,EAAc,WAClBX,EAAa,IACbE,EAAY,IACZE,EAAS,IAETE,GAAgB,GAChBE,GAAe,GACfE,GAAY,IAiBd,OACE,qBAAKE,UAAU,sBAAf,SACE,qBAAKA,UAAU,gCAAf,SACA,uBACEA,UAAU,MACVC,SAnBe,SAACC,GACpBA,EAAMC,iBAENT,GAAiBP,GACjBS,GAAgBP,GAChBS,GAAaP,GAERJ,GAAcE,GAAaE,GAIhCQ,KASIK,QAASL,EAHX,UAKE,sBAAKC,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQK,QAAQ,YAAjC,wBAEA,sBAAKL,UACHM,IACE,UACA,iBACA,CACE,kBAAmBb,IALzB,UAUE,uBACEc,GAAG,YACHP,UACEM,IACE,QACA,CACE,YAAab,IAInBe,KAAK,OACLC,YAAY,mBACZC,MAAOvB,EACPwB,SAzEiB,SAACT,GAC5BR,GAAgB,GAChBN,EAAac,EAAMU,OAAOF,UA0ElB,sBAAMV,UAAU,wBAAhB,SACE,mBAAGA,UAAU,kBAGdP,GACC,sBAAMO,UAAU,yBAAhB,SACE,mBAAGA,UAAU,qDAKlBL,GACC,mBAAGK,UAAU,iBAAb,uCAIJ,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQK,QAAQ,WAAjC,uBAEA,sBAAKL,UACHM,IACE,UACA,iBACA,CACE,kBAAmBX,IALzB,UAUE,uBACEY,GAAG,WACHP,UACEM,IACE,QACA,CACE,YAAaX,IAInBa,KAAK,OACLC,YAAY,kBACZC,MAAOrB,EACPsB,SAjHiB,SAACT,GAC5BN,GAAe,GACfN,EAAYY,EAAMU,OAAOF,UAkHjB,sBAAMV,UAAU,wBAAhB,SACE,mBAAGA,UAAU,kBAGdL,GACC,sBAAMK,UAAU,yBAAhB,SACE,mBAAGA,UAAU,qDAKlBL,GACC,mBAAGK,UAAU,iBAAb,uCAIJ,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQK,QAAQ,QAAjC,mBACA,sBAAKL,UAAU,yCAAf,UACE,uBACEA,UACEM,IACE,QACA,CACE,YAAaT,IAInBW,KAAK,QACLC,YAAY,cACZC,MAAOnB,EACPoB,SA9Ic,SAACT,GACzBJ,GAAY,GACZN,EAASU,EAAMU,OAAOF,UA+Id,sBAAMV,UAAU,wBAAhB,SACE,mBAAGA,UAAU,sBAGdH,GACC,sBAAMG,UAAU,yBAAhB,SACE,mBAAGA,UAAU,qDAKlBH,GACC,mBAAGG,UAAU,iBAAb,sCAIJ,sBAAKA,UAAU,UAAf,UACE,wBAAQQ,KAAK,SAASR,UAAU,iBAAhC,oBAIA,wBAAQQ,KAAK,SAASR,UAAU,0BAAhC,+BCrLVa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c6497393.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [hasFirstName, setHasFirstName] = useState(false);\n  const [hasLastName, setHasLastName] = useState(false);\n  const [hasEmail, setHasEmail] = useState(false);\n\n  const handleFirsNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setHasFirstName(false);\n    setFirstName(event.target.value);\n  };\n\n  const handleLastNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setHasLastName(false);\n    setLastName(event.target.value);\n  };\n\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setHasEmail(false);\n    setEmail(event.target.value);\n  };\n\n  const handleReset = () => {\n    setFirstName('');\n    setLastName('');\n    setEmail('');\n\n    setHasFirstName(false);\n    setHasLastName(false);\n    setHasEmail(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasFirstName(!firstName);\n    setHasLastName(!lastName);\n    setHasEmail(!email);\n\n    if (!firstName || !lastName || !email) {\n      return;\n    }\n\n    handleReset();\n  };\n\n  return (\n    <div className=\"columns is-centered\">\n      <div className=\"column section is-one-quarter\">\n      <form\n        className=\"box\"\n        onSubmit={handleSubmit}\n        onReset={handleReset}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"firstName\">First Name</label>\n\n          <div className={\n            classNames(\n              'control',\n              'has-icons-left',\n              {\n                'has-icons-right': hasFirstName,\n              },\n            )\n          }\n          >\n            <input\n              id=\"firstName\"\n              className={\n                classNames(\n                  'input',\n                  {\n                    'is-danger': hasFirstName,\n                  },\n                )\n              }\n              type=\"text\"\n              placeholder=\"First Name input\"\n              value={firstName}\n              onChange={handleFirsNameChange}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n\n            {hasFirstName && (\n              <span className=\"icon is-small is-right\">\n                <i className=\"fas fa-exclamation-triangle has-text-danger\" />\n              </span>\n            )}\n          </div>\n\n          {hasLastName && (\n            <p className=\"help is-danger\">This field is required</p>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"lastName\">Last Name</label>\n\n          <div className={\n            classNames(\n              'control',\n              'has-icons-left',\n              {\n                'has-icons-right': hasLastName,\n              },\n            )\n          }\n          >\n            <input\n              id=\"lastName\"\n              className={\n                classNames(\n                  'input',\n                  {\n                    'is-danger': hasLastName,\n                  },\n                )\n              }\n              type=\"text\"\n              placeholder=\"Last Name input\"\n              value={lastName}\n              onChange={handleLastNameChange}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n\n            {hasLastName && (\n              <span className=\"icon is-small is-right\">\n                <i className=\"fas fa-exclamation-triangle has-text-danger\" />\n              </span>\n            )}\n          </div>\n\n          {hasLastName && (\n            <p className=\"help is-danger\">This field is required</p>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"email\">Email</label>\n          <div className=\"control has-icons-left has-icons-right\">\n            <input\n              className={\n                classNames(\n                  'input',\n                  {\n                    'is-danger': hasEmail,\n                  },\n                )\n              }\n              type=\"email\"\n              placeholder=\"Email input\"\n              value={email}\n              onChange={handleEmailChange}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-envelope\" />\n            </span>\n\n            {hasEmail && (\n              <span className=\"icon is-small is-right\">\n                <i className=\"fas fa-exclamation-triangle has-text-danger\" />\n              </span>\n            )}\n          </div>\n\n          {hasEmail && (\n            <p className=\"help is-danger\">This field is invalid</p>\n          )}\n        </div>\n\n        <div className=\"buttons\">\n          <button type=\"submit\" className=\"button is-link\">\n            Submit\n          </button>\n\n          <button type=\"button\" className=\"button is-link is-light\">\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport 'bulma';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}